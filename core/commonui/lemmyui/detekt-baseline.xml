<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>CyclomaticComplexMethod:CommunityAndCreatorInfo.kt$@Composable fun CommunityAndCreatorInfo( modifier: Modifier = Modifier, iconSize: Dp = IconSize.l, indicatorExpanded: Boolean? = null, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, community: CommunityModel? = null, creator: UserModel? = null, distinguished: Boolean = false, featured: Boolean = false, featuredLocal: Boolean = false, locked: Boolean = false, isFromModerator: Boolean = false, isOp: Boolean = false, onOpenCommunity: ((CommunityModel) -&gt; Unit)? = null, onOpenCreator: ((UserModel) -&gt; Unit)? = null, onToggleExpanded: (() -&gt; Unit)? = null, onDoubleClick: (() -&gt; Unit)? = null, onLongClick: (() -&gt; Unit)? = null, )</ID>
    <ID>CyclomaticComplexMethod:InboxReplySubtitle.kt$@Composable fun InboxReplySubtitle( modifier: Modifier = Modifier, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, creator: UserModel? = null, community: CommunityModel? = null, iconSize: Dp = IconSize.s, date: String? = null, score: Int = 0, showScores: Boolean = true, upVotes: Int = 0, downVotes: Int = 0, options: List&lt;Option&gt; = emptyList(), voteFormat: VoteFormat = VoteFormat.Aggregated, upVoted: Boolean = false, downVoted: Boolean = false, onOpenCommunity: ((CommunityModel) -&gt; Unit)? = null, onOpenCreator: ((UserModel) -&gt; Unit)? = null, onUpVote: (() -&gt; Unit)? = null, onDownVote: (() -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, )</ID>
    <ID>CyclomaticComplexMethod:PostCardFooter.kt$@Composable fun PostCardFooter( modifier: Modifier = Modifier, voteFormat: VoteFormat = VoteFormat.Aggregated, comments: Int? = null, publishDate: String? = null, updateDate: String? = null, score: Int = 0, showScores: Boolean = true, upVotes: Int = 0, downVotes: Int = 0, saved: Boolean = false, upVoted: Boolean = false, downVoted: Boolean = false, actionButtonsActive: Boolean = true, optionsMenuOpen: MutableState&lt;Boolean&gt; = remember { mutableStateOf(false) }, options: List&lt;Option&gt; = emptyList(), onUpVote: (() -&gt; Unit)? = null, onDownVote: (() -&gt; Unit)? = null, onSave: (() -&gt; Unit)? = null, onReply: (() -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, )</ID>
    <ID>CyclomaticComplexMethod:TextFormattingBar.kt$@Composable fun TextFormattingBar( textFieldValue: TextFieldValue, onTextFieldValueChanged: (TextFieldValue) -&gt; Unit, modifier: Modifier = Modifier, onSelectImage: (() -&gt; Unit)? = null, currentLanguageId: Long? = null, availableLanguages: List&lt;LanguageModel&gt; = emptyList(), onSelectLanguage: (() -&gt; Unit)? = null, lastActionIcon: ImageVector? = null, onLastAction: (() -&gt; Unit)? = null, )</ID>
    <ID>FunctionNaming:CollapsedCommentCard.kt$@Composable fun CollapsedCommentCard( comment: CommentModel, modifier: Modifier = Modifier, voteFormat: VoteFormat = VoteFormat.Aggregated, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, showScores: Boolean = true, actionButtonsActive: Boolean = true, isOp: Boolean = false, options: List&lt;Option&gt; = emptyList(), onClick: (() -&gt; Unit)? = null, onOpenCreator: ((UserModel) -&gt; Unit)? = null, onUpVote: (() -&gt; Unit)? = null, onDownVote: (() -&gt; Unit)? = null, onSave: (() -&gt; Unit)? = null, onReply: (() -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, onToggleExpanded: (() -&gt; Unit)? = null, )</ID>
    <ID>FunctionNaming:CommentCard.kt$@Composable fun CommentCard( comment: CommentModel, modifier: Modifier = Modifier, voteFormat: VoteFormat = VoteFormat.Aggregated, hideAuthor: Boolean = false, hideCommunity: Boolean = true, hideIndent: Boolean = false, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, showScores: Boolean = true, showExpandedIndicator: Boolean = true, actionButtonsActive: Boolean = true, isOp: Boolean = false, options: List&lt;Option&gt; = emptyList(), onClick: (() -&gt; Unit)? = null, onImageClick: ((String) -&gt; Unit)? = null, onDoubleClick: (() -&gt; Unit)? = null, onUpVote: (() -&gt; Unit)? = null, onDownVote: (() -&gt; Unit)? = null, onSave: (() -&gt; Unit)? = null, onReply: (() -&gt; Unit)? = null, onOpenCommunity: ((CommunityModel, String) -&gt; Unit)? = null, onOpenCreator: ((UserModel, String) -&gt; Unit)? = null, onOpenPost: ((PostModel, String) -&gt; Unit)? = null, onOpenWeb: ((String) -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, onToggleExpanded: (() -&gt; Unit)? = null, )</ID>
    <ID>FunctionNaming:CommentCardPlaceholder.kt$@Composable fun CommentCardPlaceholder( hideAuthor: Boolean = false, )</ID>
    <ID>FunctionNaming:CommunityAndCreatorInfo.kt$@Composable fun CommunityAndCreatorInfo( modifier: Modifier = Modifier, iconSize: Dp = IconSize.l, indicatorExpanded: Boolean? = null, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, community: CommunityModel? = null, creator: UserModel? = null, distinguished: Boolean = false, featured: Boolean = false, featuredLocal: Boolean = false, locked: Boolean = false, isFromModerator: Boolean = false, isOp: Boolean = false, onOpenCommunity: ((CommunityModel) -&gt; Unit)? = null, onOpenCreator: ((UserModel) -&gt; Unit)? = null, onToggleExpanded: (() -&gt; Unit)? = null, onDoubleClick: (() -&gt; Unit)? = null, onLongClick: (() -&gt; Unit)? = null, )</ID>
    <ID>FunctionNaming:CommunityAndCreatorInfo.kt$@Composable private fun OpIndicator( modifier: Modifier = Modifier, )</ID>
    <ID>FunctionNaming:CommunityHeader.kt$@Composable fun CommunityHeader( community: CommunityModel, modifier: Modifier = Modifier, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, onOpenImage: ((String) -&gt; Unit)? = null, )</ID>
    <ID>FunctionNaming:CommunityItem.kt$@Composable fun CommunityItem( community: CommunityModel, modifier: Modifier = Modifier, small: Boolean = false, noPadding: Boolean = false, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, showSubscribers: Boolean = false, showFavorite: Boolean = false, showSubscribeButton: Boolean = false, options: List&lt;Option&gt; = emptyList(), onOptionSelected: ((OptionId) -&gt; Unit)? = null, onSubscribe: (() -&gt; Unit)? = null, )</ID>
    <ID>FunctionNaming:CommunityItemPlaceholder.kt$@Composable fun CommunityItemPlaceholder()</ID>
    <ID>FunctionNaming:DetailInfoItem.kt$@Composable fun DetailInfoItem( modifier: Modifier = Modifier, icon: ImageVector? = null, title: String = "", value: String = "", )</ID>
    <ID>FunctionNaming:InboxCard.kt$@Composable fun InboxCard( mention: PersonMentionModel, type: InboxCardType, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, showScores: Boolean = true, voteFormat: VoteFormat = VoteFormat.Aggregated, postLayout: PostLayout = PostLayout.Card, options: List&lt;Option&gt; = emptyList(), onImageClick: (String) -&gt; Unit, onOpenPost: (PostModel) -&gt; Unit, onOpenCreator: (UserModel) -&gt; Unit, onOpenCommunity: (CommunityModel) -&gt; Unit, onUpVote: ((CommentModel) -&gt; Unit)? = null, onDownVote: ((CommentModel) -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, )</ID>
    <ID>FunctionNaming:InboxCardPlaceholder.kt$@Composable fun InboxCardPlaceholder( postLayout: PostLayout = PostLayout.Card, )</ID>
    <ID>FunctionNaming:InboxMentionHeader.kt$@Composable fun InboxCardHeader( mention: PersonMentionModel, type: InboxCardType, )</ID>
    <ID>FunctionNaming:InboxReplySubtitle.kt$@Composable fun InboxReplySubtitle( modifier: Modifier = Modifier, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, creator: UserModel? = null, community: CommunityModel? = null, iconSize: Dp = IconSize.s, date: String? = null, score: Int = 0, showScores: Boolean = true, upVotes: Int = 0, downVotes: Int = 0, options: List&lt;Option&gt; = emptyList(), voteFormat: VoteFormat = VoteFormat.Aggregated, upVoted: Boolean = false, downVoted: Boolean = false, onOpenCommunity: ((CommunityModel) -&gt; Unit)? = null, onOpenCreator: ((UserModel) -&gt; Unit)? = null, onUpVote: (() -&gt; Unit)? = null, onDownVote: (() -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, )</ID>
    <ID>FunctionNaming:MultiCommunityItem.kt$@Composable fun MultiCommunityItem( community: MultiCommunityModel, modifier: Modifier = Modifier, small: Boolean = false, autoLoadImages: Boolean = true, options: List&lt;Option&gt; = emptyList(), onOptionSelected: ((OptionId) -&gt; Unit)? = null, )</ID>
    <ID>FunctionNaming:PostCard.kt$@Composable fun PostCard( modifier: Modifier = Modifier, post: PostModel, isFromModerator: Boolean = false, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, showScores: Boolean = true, hideAuthor: Boolean = false, postLayout: PostLayout = PostLayout.Card, voteFormat: VoteFormat = VoteFormat.Aggregated, includeFullBody: Boolean = false, fullHeightImage: Boolean = true, limitBodyHeight: Boolean = false, blurNsfw: Boolean = true, actionButtonsActive: Boolean = true, options: List&lt;Option&gt; = emptyList(), onOpenCommunity: ((CommunityModel, String) -&gt; Unit)? = null, onOpenCreator: ((UserModel, String) -&gt; Unit)? = null, onOpenPost: ((PostModel, String) -&gt; Unit)? = null, onOpenWeb: ((String) -&gt; Unit)? = null, onUpVote: (() -&gt; Unit)? = null, onDownVote: (() -&gt; Unit)? = null, onSave: (() -&gt; Unit)? = null, onReply: (() -&gt; Unit)? = null, onOpenImage: ((String) -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, onClick: (() -&gt; Unit)? = null, onDoubleClick: (() -&gt; Unit)? = null, )</ID>
    <ID>FunctionNaming:PostCard.kt$@Composable private fun CompactPost( modifier: Modifier = Modifier, post: PostModel, isFromModerator: Boolean = false, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, showScores: Boolean = true, hideAuthor: Boolean, blurNsfw: Boolean, actionButtonsActive: Boolean = true, voteFormat: VoteFormat = VoteFormat.Aggregated, options: List&lt;Option&gt; = emptyList(), onOpenCommunity: ((CommunityModel, String) -&gt; Unit)? = null, onOpenCreator: ((UserModel, String) -&gt; Unit)? = null, onOpenPost: ((PostModel, String) -&gt; Unit)? = null, onOpenWeb: ((String) -&gt; Unit)? = null, onUpVote: (() -&gt; Unit)? = null, onDownVote: (() -&gt; Unit)? = null, onSave: (() -&gt; Unit)? = null, onReply: (() -&gt; Unit)? = null, onOpenImage: ((String) -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, onClick: (() -&gt; Unit)? = null, onDoubleClick: (() -&gt; Unit)? = null, )</ID>
    <ID>FunctionNaming:PostCard.kt$@Composable private fun ExtendedPost( modifier: Modifier = Modifier, post: PostModel, isFromModerator: Boolean = false, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, showScores: Boolean = true, hideAuthor: Boolean = false, blurNsfw: Boolean = true, voteFormat: VoteFormat = VoteFormat.Aggregated, showBody: Boolean = false, limitBodyHeight: Boolean = false, fullHeightImage: Boolean = true, roundedCornerImage: Boolean = true, actionButtonsActive: Boolean = true, backgroundColor: Color = MaterialTheme.colorScheme.background, options: List&lt;Option&gt; = emptyList(), onOpenCommunity: ((CommunityModel, String) -&gt; Unit)? = null, onOpenCreator: ((UserModel, String) -&gt; Unit)? = null, onOpenPost: ((PostModel, String) -&gt; Unit)? = null, onOpenWeb: ((String) -&gt; Unit)? = null, onUpVote: (() -&gt; Unit)? = null, onDownVote: (() -&gt; Unit)? = null, onSave: (() -&gt; Unit)? = null, onReply: (() -&gt; Unit)? = null, onOpenImage: ((String) -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, onClick: (() -&gt; Unit)? = null, onDoubleClick: (() -&gt; Unit)? = null, )</ID>
    <ID>FunctionNaming:PostCardBody.kt$@Composable fun PostCardBody( modifier: Modifier = Modifier, text: String, maxLines: Int? = null, autoLoadImages: Boolean = true, onClick: (() -&gt; Unit)? = null, onOpenImage: ((String) -&gt; Unit)? = null, onDoubleClick: (() -&gt; Unit)? = null, onLongClick: (() -&gt; Unit)? = null, onOpenCommunity: ((CommunityModel, String) -&gt; Unit)? = null, onOpenUser: ((UserModel, String) -&gt; Unit)? = null, onOpenPost: ((PostModel, String) -&gt; Unit)? = null, onOpenWeb: ((String) -&gt; Unit)? = null, )</ID>
    <ID>FunctionNaming:PostCardFooter.kt$@Composable fun PostCardFooter( modifier: Modifier = Modifier, voteFormat: VoteFormat = VoteFormat.Aggregated, comments: Int? = null, publishDate: String? = null, updateDate: String? = null, score: Int = 0, showScores: Boolean = true, upVotes: Int = 0, downVotes: Int = 0, saved: Boolean = false, upVoted: Boolean = false, downVoted: Boolean = false, actionButtonsActive: Boolean = true, optionsMenuOpen: MutableState&lt;Boolean&gt; = remember { mutableStateOf(false) }, options: List&lt;Option&gt; = emptyList(), onUpVote: (() -&gt; Unit)? = null, onDownVote: (() -&gt; Unit)? = null, onSave: (() -&gt; Unit)? = null, onReply: (() -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, )</ID>
    <ID>FunctionNaming:PostCardImage.kt$@Composable fun PostCardImage( modifier: Modifier = Modifier, imageUrl: String, autoLoadImages: Boolean = true, loadButtonContent: @Composable (() -&gt; Unit)? = null, minHeight: Dp = 200.dp, maxHeight: Dp = Dp.Unspecified, blurred: Boolean = false, onImageClick: ((String) -&gt; Unit)? = null, onDoubleClick: (() -&gt; Unit)? = null, onLongClick: (() -&gt; Unit)? = null, )</ID>
    <ID>FunctionNaming:PostCardPlaceholder.kt$@Composable fun PostCardPlaceholder( postLayout: PostLayout = PostLayout.Card, )</ID>
    <ID>FunctionNaming:PostCardTitle.kt$@Composable fun PostCardTitle( text: String, bolder: Boolean = false, autoLoadImages: Boolean = true, modifier: Modifier = Modifier, onClick: (() -&gt; Unit)? = null, onOpenImage: ((String) -&gt; Unit)? = null, onDoubleClick: (() -&gt; Unit)? = null, onLongClick: (() -&gt; Unit)? = null, onOpenCommunity: ((CommunityModel, String) -&gt; Unit)? = null, onOpenUser: ((UserModel, String) -&gt; Unit)? = null, onOpenPost: ((PostModel, String) -&gt; Unit)? = null, onOpenWeb: ((String) -&gt; Unit)? = null, )</ID>
    <ID>FunctionNaming:PostCardVideo.kt$@Composable fun PostCardVideo( modifier: Modifier = Modifier, url: String, blurred: Boolean = false, autoLoadImages: Boolean = true, backgroundColor: Color = MaterialTheme.colorScheme.background, onOpen: (() -&gt; Unit)? = null, )</ID>
    <ID>FunctionNaming:PostLinkBanner.kt$@Composable fun PostLinkBanner( modifier: Modifier = Modifier, url: String, )</ID>
    <ID>FunctionNaming:SettingsFormattedInfo.kt$@Composable fun SettingsFormattedInfo( modifier: Modifier = Modifier, title: String = "", value: String = "", onEdit: (() -&gt; Unit)? = null, )</ID>
    <ID>FunctionNaming:SettingsHeader.kt$@Composable fun SettingsHeader( title: String, modifier: Modifier = Modifier, icon: ImageVector? = null, rightButton: @Composable (() -&gt; Unit)? = null, )</ID>
    <ID>FunctionNaming:SettingsImageInfo.kt$@Composable fun SettingsImageInfo( modifier: Modifier = Modifier, imageModifier: Modifier = Modifier, contentScale : ContentScale = ContentScale.FillBounds, title: String = "", url: String = "", onEdit: (() -&gt; Unit)? = null, )</ID>
    <ID>FunctionNaming:SettingsIntValueRow.kt$@Composable fun SettingsIntValueRow( title: String, value: Int, subtitle: String? = null, onIncrement: () -&gt; Unit, onDecrement: () -&gt; Unit, )</ID>
    <ID>FunctionNaming:SettingsRow.kt$@Composable fun SettingsRow( icon: ImageVector? = null, title: String, value: String = "", disclosureIndicator: Boolean = false, annotatedValue: AnnotatedString = AnnotatedString(""), modifier: Modifier = Modifier, subtitle: String? = null, onTap: (() -&gt; Unit)? = null, )</ID>
    <ID>FunctionNaming:SettingsSwitchRow.kt$@Composable fun SettingsSwitchRow( title: String, value: Boolean, subtitle: String? = null, onValueChanged: (Boolean) -&gt; Unit, )</ID>
    <ID>FunctionNaming:SettingsTextualInfo.kt$@Composable fun SettingsTextualInfo( modifier: Modifier = Modifier, title: String = "", value: String = "", valueStyle: TextStyle = MaterialTheme.typography.bodyMedium, onEdit: (() -&gt; Unit)? = null, )</ID>
    <ID>FunctionNaming:TextFormattingBar.kt$@Composable fun TextFormattingBar( textFieldValue: TextFieldValue, onTextFieldValueChanged: (TextFieldValue) -&gt; Unit, modifier: Modifier = Modifier, onSelectImage: (() -&gt; Unit)? = null, currentLanguageId: Long? = null, availableLanguages: List&lt;LanguageModel&gt; = emptyList(), onSelectLanguage: (() -&gt; Unit)? = null, lastActionIcon: ImageVector? = null, onLastAction: (() -&gt; Unit)? = null, )</ID>
    <ID>FunctionNaming:UserHeader.kt$@Composable fun UserHeader( user: UserModel, modifier: Modifier = Modifier, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, onOpenImage: ((String) -&gt; Unit)? = null, )</ID>
    <ID>FunctionNaming:UserItem.kt$@Composable fun UserItem( user: UserModel, modifier: Modifier = Modifier, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, options: List&lt;Option&gt; = emptyList(), onOptionSelected: ((OptionId) -&gt; Unit)? = null, )</ID>
    <ID>LongMethod:CollapsedCommentCard.kt$@Composable fun CollapsedCommentCard( comment: CommentModel, modifier: Modifier = Modifier, voteFormat: VoteFormat = VoteFormat.Aggregated, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, showScores: Boolean = true, actionButtonsActive: Boolean = true, isOp: Boolean = false, options: List&lt;Option&gt; = emptyList(), onClick: (() -&gt; Unit)? = null, onOpenCreator: ((UserModel) -&gt; Unit)? = null, onUpVote: (() -&gt; Unit)? = null, onDownVote: (() -&gt; Unit)? = null, onSave: (() -&gt; Unit)? = null, onReply: (() -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, onToggleExpanded: (() -&gt; Unit)? = null, )</ID>
    <ID>LongMethod:CommentCard.kt$@Composable fun CommentCard( comment: CommentModel, modifier: Modifier = Modifier, voteFormat: VoteFormat = VoteFormat.Aggregated, hideAuthor: Boolean = false, hideCommunity: Boolean = true, hideIndent: Boolean = false, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, showScores: Boolean = true, showExpandedIndicator: Boolean = true, actionButtonsActive: Boolean = true, isOp: Boolean = false, options: List&lt;Option&gt; = emptyList(), onClick: (() -&gt; Unit)? = null, onImageClick: ((String) -&gt; Unit)? = null, onDoubleClick: (() -&gt; Unit)? = null, onUpVote: (() -&gt; Unit)? = null, onDownVote: (() -&gt; Unit)? = null, onSave: (() -&gt; Unit)? = null, onReply: (() -&gt; Unit)? = null, onOpenCommunity: ((CommunityModel, String) -&gt; Unit)? = null, onOpenCreator: ((UserModel, String) -&gt; Unit)? = null, onOpenPost: ((PostModel, String) -&gt; Unit)? = null, onOpenWeb: ((String) -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, onToggleExpanded: (() -&gt; Unit)? = null, )</ID>
    <ID>LongMethod:CommunityAndCreatorInfo.kt$@Composable fun CommunityAndCreatorInfo( modifier: Modifier = Modifier, iconSize: Dp = IconSize.l, indicatorExpanded: Boolean? = null, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, community: CommunityModel? = null, creator: UserModel? = null, distinguished: Boolean = false, featured: Boolean = false, featuredLocal: Boolean = false, locked: Boolean = false, isFromModerator: Boolean = false, isOp: Boolean = false, onOpenCommunity: ((CommunityModel) -&gt; Unit)? = null, onOpenCreator: ((UserModel) -&gt; Unit)? = null, onToggleExpanded: (() -&gt; Unit)? = null, onDoubleClick: (() -&gt; Unit)? = null, onLongClick: (() -&gt; Unit)? = null, )</ID>
    <ID>LongMethod:CommunityHeader.kt$@Composable fun CommunityHeader( community: CommunityModel, modifier: Modifier = Modifier, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, onOpenImage: ((String) -&gt; Unit)? = null, )</ID>
    <ID>LongMethod:CommunityItem.kt$@Composable fun CommunityItem( community: CommunityModel, modifier: Modifier = Modifier, small: Boolean = false, noPadding: Boolean = false, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, showSubscribers: Boolean = false, showFavorite: Boolean = false, showSubscribeButton: Boolean = false, options: List&lt;Option&gt; = emptyList(), onOptionSelected: ((OptionId) -&gt; Unit)? = null, onSubscribe: (() -&gt; Unit)? = null, )</ID>
    <ID>LongMethod:InboxCard.kt$@Composable fun InboxCard( mention: PersonMentionModel, type: InboxCardType, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, showScores: Boolean = true, voteFormat: VoteFormat = VoteFormat.Aggregated, postLayout: PostLayout = PostLayout.Card, options: List&lt;Option&gt; = emptyList(), onImageClick: (String) -&gt; Unit, onOpenPost: (PostModel) -&gt; Unit, onOpenCreator: (UserModel) -&gt; Unit, onOpenCommunity: (CommunityModel) -&gt; Unit, onUpVote: ((CommentModel) -&gt; Unit)? = null, onDownVote: ((CommentModel) -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, )</ID>
    <ID>LongMethod:InboxReplySubtitle.kt$@Composable fun InboxReplySubtitle( modifier: Modifier = Modifier, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, creator: UserModel? = null, community: CommunityModel? = null, iconSize: Dp = IconSize.s, date: String? = null, score: Int = 0, showScores: Boolean = true, upVotes: Int = 0, downVotes: Int = 0, options: List&lt;Option&gt; = emptyList(), voteFormat: VoteFormat = VoteFormat.Aggregated, upVoted: Boolean = false, downVoted: Boolean = false, onOpenCommunity: ((CommunityModel) -&gt; Unit)? = null, onOpenCreator: ((UserModel) -&gt; Unit)? = null, onUpVote: (() -&gt; Unit)? = null, onDownVote: (() -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, )</ID>
    <ID>LongMethod:MultiCommunityItem.kt$@Composable fun MultiCommunityItem( community: MultiCommunityModel, modifier: Modifier = Modifier, small: Boolean = false, autoLoadImages: Boolean = true, options: List&lt;Option&gt; = emptyList(), onOptionSelected: ((OptionId) -&gt; Unit)? = null, )</ID>
    <ID>LongMethod:PostCard.kt$@Composable fun PostCard( modifier: Modifier = Modifier, post: PostModel, isFromModerator: Boolean = false, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, showScores: Boolean = true, hideAuthor: Boolean = false, postLayout: PostLayout = PostLayout.Card, voteFormat: VoteFormat = VoteFormat.Aggregated, includeFullBody: Boolean = false, fullHeightImage: Boolean = true, limitBodyHeight: Boolean = false, blurNsfw: Boolean = true, actionButtonsActive: Boolean = true, options: List&lt;Option&gt; = emptyList(), onOpenCommunity: ((CommunityModel, String) -&gt; Unit)? = null, onOpenCreator: ((UserModel, String) -&gt; Unit)? = null, onOpenPost: ((PostModel, String) -&gt; Unit)? = null, onOpenWeb: ((String) -&gt; Unit)? = null, onUpVote: (() -&gt; Unit)? = null, onDownVote: (() -&gt; Unit)? = null, onSave: (() -&gt; Unit)? = null, onReply: (() -&gt; Unit)? = null, onOpenImage: ((String) -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, onClick: (() -&gt; Unit)? = null, onDoubleClick: (() -&gt; Unit)? = null, )</ID>
    <ID>LongMethod:PostCard.kt$@Composable private fun CompactPost( modifier: Modifier = Modifier, post: PostModel, isFromModerator: Boolean = false, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, showScores: Boolean = true, hideAuthor: Boolean, blurNsfw: Boolean, actionButtonsActive: Boolean = true, voteFormat: VoteFormat = VoteFormat.Aggregated, options: List&lt;Option&gt; = emptyList(), onOpenCommunity: ((CommunityModel, String) -&gt; Unit)? = null, onOpenCreator: ((UserModel, String) -&gt; Unit)? = null, onOpenPost: ((PostModel, String) -&gt; Unit)? = null, onOpenWeb: ((String) -&gt; Unit)? = null, onUpVote: (() -&gt; Unit)? = null, onDownVote: (() -&gt; Unit)? = null, onSave: (() -&gt; Unit)? = null, onReply: (() -&gt; Unit)? = null, onOpenImage: ((String) -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, onClick: (() -&gt; Unit)? = null, onDoubleClick: (() -&gt; Unit)? = null, )</ID>
    <ID>LongMethod:PostCard.kt$@Composable private fun ExtendedPost( modifier: Modifier = Modifier, post: PostModel, isFromModerator: Boolean = false, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, showScores: Boolean = true, hideAuthor: Boolean = false, blurNsfw: Boolean = true, voteFormat: VoteFormat = VoteFormat.Aggregated, showBody: Boolean = false, limitBodyHeight: Boolean = false, fullHeightImage: Boolean = true, roundedCornerImage: Boolean = true, actionButtonsActive: Boolean = true, backgroundColor: Color = MaterialTheme.colorScheme.background, options: List&lt;Option&gt; = emptyList(), onOpenCommunity: ((CommunityModel, String) -&gt; Unit)? = null, onOpenCreator: ((UserModel, String) -&gt; Unit)? = null, onOpenPost: ((PostModel, String) -&gt; Unit)? = null, onOpenWeb: ((String) -&gt; Unit)? = null, onUpVote: (() -&gt; Unit)? = null, onDownVote: (() -&gt; Unit)? = null, onSave: (() -&gt; Unit)? = null, onReply: (() -&gt; Unit)? = null, onOpenImage: ((String) -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, onClick: (() -&gt; Unit)? = null, onDoubleClick: (() -&gt; Unit)? = null, )</ID>
    <ID>LongMethod:PostCardFooter.kt$@Composable fun PostCardFooter( modifier: Modifier = Modifier, voteFormat: VoteFormat = VoteFormat.Aggregated, comments: Int? = null, publishDate: String? = null, updateDate: String? = null, score: Int = 0, showScores: Boolean = true, upVotes: Int = 0, downVotes: Int = 0, saved: Boolean = false, upVoted: Boolean = false, downVoted: Boolean = false, actionButtonsActive: Boolean = true, optionsMenuOpen: MutableState&lt;Boolean&gt; = remember { mutableStateOf(false) }, options: List&lt;Option&gt; = emptyList(), onUpVote: (() -&gt; Unit)? = null, onDownVote: (() -&gt; Unit)? = null, onSave: (() -&gt; Unit)? = null, onReply: (() -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, )</ID>
    <ID>LongMethod:PostCardPlaceholder.kt$@Composable fun PostCardPlaceholder( postLayout: PostLayout = PostLayout.Card, )</ID>
    <ID>LongMethod:PostCardTitle.kt$@Composable fun PostCardTitle( text: String, bolder: Boolean = false, autoLoadImages: Boolean = true, modifier: Modifier = Modifier, onClick: (() -&gt; Unit)? = null, onOpenImage: ((String) -&gt; Unit)? = null, onDoubleClick: (() -&gt; Unit)? = null, onLongClick: (() -&gt; Unit)? = null, onOpenCommunity: ((CommunityModel, String) -&gt; Unit)? = null, onOpenUser: ((UserModel, String) -&gt; Unit)? = null, onOpenPost: ((PostModel, String) -&gt; Unit)? = null, onOpenWeb: ((String) -&gt; Unit)? = null, )</ID>
    <ID>LongMethod:PostCardVideo.kt$@Composable fun PostCardVideo( modifier: Modifier = Modifier, url: String, blurred: Boolean = false, autoLoadImages: Boolean = true, backgroundColor: Color = MaterialTheme.colorScheme.background, onOpen: (() -&gt; Unit)? = null, )</ID>
    <ID>LongMethod:SettingsRow.kt$@Composable fun SettingsRow( icon: ImageVector? = null, title: String, value: String = "", disclosureIndicator: Boolean = false, annotatedValue: AnnotatedString = AnnotatedString(""), modifier: Modifier = Modifier, subtitle: String? = null, onTap: (() -&gt; Unit)? = null, )</ID>
    <ID>LongMethod:TextFormattingBar.kt$@Composable fun TextFormattingBar( textFieldValue: TextFieldValue, onTextFieldValueChanged: (TextFieldValue) -&gt; Unit, modifier: Modifier = Modifier, onSelectImage: (() -&gt; Unit)? = null, currentLanguageId: Long? = null, availableLanguages: List&lt;LanguageModel&gt; = emptyList(), onSelectLanguage: (() -&gt; Unit)? = null, lastActionIcon: ImageVector? = null, onLastAction: (() -&gt; Unit)? = null, )</ID>
    <ID>LongMethod:UserHeader.kt$@Composable fun UserHeader( user: UserModel, modifier: Modifier = Modifier, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, onOpenImage: ((String) -&gt; Unit)? = null, )</ID>
    <ID>LongMethod:UserItem.kt$@Composable fun UserItem( user: UserModel, modifier: Modifier = Modifier, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, options: List&lt;Option&gt; = emptyList(), onOptionSelected: ((OptionId) -&gt; Unit)? = null, )</ID>
    <ID>LongParameterList:CollapsedCommentCard.kt$( comment: CommentModel, modifier: Modifier = Modifier, voteFormat: VoteFormat = VoteFormat.Aggregated, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, showScores: Boolean = true, actionButtonsActive: Boolean = true, isOp: Boolean = false, options: List&lt;Option&gt; = emptyList(), onClick: (() -&gt; Unit)? = null, onOpenCreator: ((UserModel) -&gt; Unit)? = null, onUpVote: (() -&gt; Unit)? = null, onDownVote: (() -&gt; Unit)? = null, onSave: (() -&gt; Unit)? = null, onReply: (() -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, onToggleExpanded: (() -&gt; Unit)? = null, )</ID>
    <ID>LongParameterList:CommentCard.kt$( comment: CommentModel, modifier: Modifier = Modifier, voteFormat: VoteFormat = VoteFormat.Aggregated, hideAuthor: Boolean = false, hideCommunity: Boolean = true, hideIndent: Boolean = false, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, showScores: Boolean = true, showExpandedIndicator: Boolean = true, actionButtonsActive: Boolean = true, isOp: Boolean = false, options: List&lt;Option&gt; = emptyList(), onClick: (() -&gt; Unit)? = null, onImageClick: ((String) -&gt; Unit)? = null, onDoubleClick: (() -&gt; Unit)? = null, onUpVote: (() -&gt; Unit)? = null, onDownVote: (() -&gt; Unit)? = null, onSave: (() -&gt; Unit)? = null, onReply: (() -&gt; Unit)? = null, onOpenCommunity: ((CommunityModel, String) -&gt; Unit)? = null, onOpenCreator: ((UserModel, String) -&gt; Unit)? = null, onOpenPost: ((PostModel, String) -&gt; Unit)? = null, onOpenWeb: ((String) -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, onToggleExpanded: (() -&gt; Unit)? = null, )</ID>
    <ID>LongParameterList:CommunityAndCreatorInfo.kt$( modifier: Modifier = Modifier, iconSize: Dp = IconSize.l, indicatorExpanded: Boolean? = null, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, community: CommunityModel? = null, creator: UserModel? = null, distinguished: Boolean = false, featured: Boolean = false, featuredLocal: Boolean = false, locked: Boolean = false, isFromModerator: Boolean = false, isOp: Boolean = false, onOpenCommunity: ((CommunityModel) -&gt; Unit)? = null, onOpenCreator: ((UserModel) -&gt; Unit)? = null, onToggleExpanded: (() -&gt; Unit)? = null, onDoubleClick: (() -&gt; Unit)? = null, onLongClick: (() -&gt; Unit)? = null, )</ID>
    <ID>LongParameterList:CommunityItem.kt$( community: CommunityModel, modifier: Modifier = Modifier, small: Boolean = false, noPadding: Boolean = false, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, showSubscribers: Boolean = false, showFavorite: Boolean = false, showSubscribeButton: Boolean = false, options: List&lt;Option&gt; = emptyList(), onOptionSelected: ((OptionId) -&gt; Unit)? = null, onSubscribe: (() -&gt; Unit)? = null, )</ID>
    <ID>LongParameterList:InboxCard.kt$( mention: PersonMentionModel, type: InboxCardType, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, showScores: Boolean = true, voteFormat: VoteFormat = VoteFormat.Aggregated, postLayout: PostLayout = PostLayout.Card, options: List&lt;Option&gt; = emptyList(), onImageClick: (String) -&gt; Unit, onOpenPost: (PostModel) -&gt; Unit, onOpenCreator: (UserModel) -&gt; Unit, onOpenCommunity: (CommunityModel) -&gt; Unit, onUpVote: ((CommentModel) -&gt; Unit)? = null, onDownVote: ((CommentModel) -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, )</ID>
    <ID>LongParameterList:InboxReplySubtitle.kt$( modifier: Modifier = Modifier, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, creator: UserModel? = null, community: CommunityModel? = null, iconSize: Dp = IconSize.s, date: String? = null, score: Int = 0, showScores: Boolean = true, upVotes: Int = 0, downVotes: Int = 0, options: List&lt;Option&gt; = emptyList(), voteFormat: VoteFormat = VoteFormat.Aggregated, upVoted: Boolean = false, downVoted: Boolean = false, onOpenCommunity: ((CommunityModel) -&gt; Unit)? = null, onOpenCreator: ((UserModel) -&gt; Unit)? = null, onUpVote: (() -&gt; Unit)? = null, onDownVote: (() -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, )</ID>
    <ID>LongParameterList:MultiCommunityItem.kt$( community: MultiCommunityModel, modifier: Modifier = Modifier, small: Boolean = false, autoLoadImages: Boolean = true, options: List&lt;Option&gt; = emptyList(), onOptionSelected: ((OptionId) -&gt; Unit)? = null, )</ID>
    <ID>LongParameterList:PostCard.kt$( modifier: Modifier = Modifier, post: PostModel, isFromModerator: Boolean = false, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, showScores: Boolean = true, hideAuthor: Boolean = false, blurNsfw: Boolean = true, voteFormat: VoteFormat = VoteFormat.Aggregated, showBody: Boolean = false, limitBodyHeight: Boolean = false, fullHeightImage: Boolean = true, roundedCornerImage: Boolean = true, actionButtonsActive: Boolean = true, backgroundColor: Color = MaterialTheme.colorScheme.background, options: List&lt;Option&gt; = emptyList(), onOpenCommunity: ((CommunityModel, String) -&gt; Unit)? = null, onOpenCreator: ((UserModel, String) -&gt; Unit)? = null, onOpenPost: ((PostModel, String) -&gt; Unit)? = null, onOpenWeb: ((String) -&gt; Unit)? = null, onUpVote: (() -&gt; Unit)? = null, onDownVote: (() -&gt; Unit)? = null, onSave: (() -&gt; Unit)? = null, onReply: (() -&gt; Unit)? = null, onOpenImage: ((String) -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, onClick: (() -&gt; Unit)? = null, onDoubleClick: (() -&gt; Unit)? = null, )</ID>
    <ID>LongParameterList:PostCard.kt$( modifier: Modifier = Modifier, post: PostModel, isFromModerator: Boolean = false, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, showScores: Boolean = true, hideAuthor: Boolean = false, postLayout: PostLayout = PostLayout.Card, voteFormat: VoteFormat = VoteFormat.Aggregated, includeFullBody: Boolean = false, fullHeightImage: Boolean = true, limitBodyHeight: Boolean = false, blurNsfw: Boolean = true, actionButtonsActive: Boolean = true, options: List&lt;Option&gt; = emptyList(), onOpenCommunity: ((CommunityModel, String) -&gt; Unit)? = null, onOpenCreator: ((UserModel, String) -&gt; Unit)? = null, onOpenPost: ((PostModel, String) -&gt; Unit)? = null, onOpenWeb: ((String) -&gt; Unit)? = null, onUpVote: (() -&gt; Unit)? = null, onDownVote: (() -&gt; Unit)? = null, onSave: (() -&gt; Unit)? = null, onReply: (() -&gt; Unit)? = null, onOpenImage: ((String) -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, onClick: (() -&gt; Unit)? = null, onDoubleClick: (() -&gt; Unit)? = null, )</ID>
    <ID>LongParameterList:PostCard.kt$( modifier: Modifier = Modifier, post: PostModel, isFromModerator: Boolean = false, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, showScores: Boolean = true, hideAuthor: Boolean, blurNsfw: Boolean, actionButtonsActive: Boolean = true, voteFormat: VoteFormat = VoteFormat.Aggregated, options: List&lt;Option&gt; = emptyList(), onOpenCommunity: ((CommunityModel, String) -&gt; Unit)? = null, onOpenCreator: ((UserModel, String) -&gt; Unit)? = null, onOpenPost: ((PostModel, String) -&gt; Unit)? = null, onOpenWeb: ((String) -&gt; Unit)? = null, onUpVote: (() -&gt; Unit)? = null, onDownVote: (() -&gt; Unit)? = null, onSave: (() -&gt; Unit)? = null, onReply: (() -&gt; Unit)? = null, onOpenImage: ((String) -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, onClick: (() -&gt; Unit)? = null, onDoubleClick: (() -&gt; Unit)? = null, )</ID>
    <ID>LongParameterList:PostCardBody.kt$( modifier: Modifier = Modifier, text: String, maxLines: Int? = null, autoLoadImages: Boolean = true, onClick: (() -&gt; Unit)? = null, onOpenImage: ((String) -&gt; Unit)? = null, onDoubleClick: (() -&gt; Unit)? = null, onLongClick: (() -&gt; Unit)? = null, onOpenCommunity: ((CommunityModel, String) -&gt; Unit)? = null, onOpenUser: ((UserModel, String) -&gt; Unit)? = null, onOpenPost: ((PostModel, String) -&gt; Unit)? = null, onOpenWeb: ((String) -&gt; Unit)? = null, )</ID>
    <ID>LongParameterList:PostCardFooter.kt$( modifier: Modifier = Modifier, voteFormat: VoteFormat = VoteFormat.Aggregated, comments: Int? = null, publishDate: String? = null, updateDate: String? = null, score: Int = 0, showScores: Boolean = true, upVotes: Int = 0, downVotes: Int = 0, saved: Boolean = false, upVoted: Boolean = false, downVoted: Boolean = false, actionButtonsActive: Boolean = true, optionsMenuOpen: MutableState&lt;Boolean&gt; = remember { mutableStateOf(false) }, options: List&lt;Option&gt; = emptyList(), onUpVote: (() -&gt; Unit)? = null, onDownVote: (() -&gt; Unit)? = null, onSave: (() -&gt; Unit)? = null, onReply: (() -&gt; Unit)? = null, onOptionSelected: ((OptionId) -&gt; Unit)? = null, )</ID>
    <ID>LongParameterList:PostCardImage.kt$( modifier: Modifier = Modifier, imageUrl: String, autoLoadImages: Boolean = true, loadButtonContent: @Composable (() -&gt; Unit)? = null, minHeight: Dp = 200.dp, maxHeight: Dp = Dp.Unspecified, blurred: Boolean = false, onImageClick: ((String) -&gt; Unit)? = null, onDoubleClick: (() -&gt; Unit)? = null, onLongClick: (() -&gt; Unit)? = null, )</ID>
    <ID>LongParameterList:PostCardTitle.kt$( text: String, bolder: Boolean = false, autoLoadImages: Boolean = true, modifier: Modifier = Modifier, onClick: (() -&gt; Unit)? = null, onOpenImage: ((String) -&gt; Unit)? = null, onDoubleClick: (() -&gt; Unit)? = null, onLongClick: (() -&gt; Unit)? = null, onOpenCommunity: ((CommunityModel, String) -&gt; Unit)? = null, onOpenUser: ((UserModel, String) -&gt; Unit)? = null, onOpenPost: ((PostModel, String) -&gt; Unit)? = null, onOpenWeb: ((String) -&gt; Unit)? = null, )</ID>
    <ID>LongParameterList:PostCardVideo.kt$( modifier: Modifier = Modifier, url: String, blurred: Boolean = false, autoLoadImages: Boolean = true, backgroundColor: Color = MaterialTheme.colorScheme.background, onOpen: (() -&gt; Unit)? = null, )</ID>
    <ID>LongParameterList:SettingsImageInfo.kt$( modifier: Modifier = Modifier, imageModifier: Modifier = Modifier, contentScale : ContentScale = ContentScale.FillBounds, title: String = "", url: String = "", onEdit: (() -&gt; Unit)? = null, )</ID>
    <ID>LongParameterList:SettingsRow.kt$( icon: ImageVector? = null, title: String, value: String = "", disclosureIndicator: Boolean = false, annotatedValue: AnnotatedString = AnnotatedString(""), modifier: Modifier = Modifier, subtitle: String? = null, onTap: (() -&gt; Unit)? = null, )</ID>
    <ID>LongParameterList:TextFormattingBar.kt$( textFieldValue: TextFieldValue, onTextFieldValueChanged: (TextFieldValue) -&gt; Unit, modifier: Modifier = Modifier, onSelectImage: (() -&gt; Unit)? = null, currentLanguageId: Long? = null, availableLanguages: List&lt;LanguageModel&gt; = emptyList(), onSelectLanguage: (() -&gt; Unit)? = null, lastActionIcon: ImageVector? = null, onLastAction: (() -&gt; Unit)? = null, )</ID>
    <ID>LongParameterList:UrlUtils.kt$( url: String, openExternal: Boolean, uriHandler: UriHandler, onOpenCommunity: ((CommunityModel, String) -&gt; Unit)? = null, onOpenUser: ((UserModel, String) -&gt; Unit)? = null, onOpenPost: ((PostModel, String) -&gt; Unit)? = null, onOpenWeb: ((String) -&gt; Unit)? = null, )</ID>
    <ID>LongParameterList:UserItem.kt$( user: UserModel, modifier: Modifier = Modifier, autoLoadImages: Boolean = true, preferNicknames: Boolean = true, options: List&lt;Option&gt; = emptyList(), onOptionSelected: ((OptionId) -&gt; Unit)? = null, )</ID>
    <ID>MagicNumber:CommentCardPlaceholder.kt$0.5f</ID>
    <ID>MagicNumber:FabNestedScrollConnection.kt$DefaultFabNestedScrollConnection$5_000</ID>
    <ID>MagicNumber:Options.kt$OptionId.AddMod$20</ID>
    <ID>MagicNumber:Options.kt$OptionId.BanUser$19</ID>
    <ID>MagicNumber:Options.kt$OptionId.Block$9</ID>
    <ID>MagicNumber:Options.kt$OptionId.BlockInstance$10</ID>
    <ID>MagicNumber:Options.kt$OptionId.Copy$26</ID>
    <ID>MagicNumber:Options.kt$OptionId.CrossPost$3</ID>
    <ID>MagicNumber:Options.kt$OptionId.Delete$6</ID>
    <ID>MagicNumber:Options.kt$OptionId.DistinguishComment$16</ID>
    <ID>MagicNumber:Options.kt$OptionId.Edit$5</ID>
    <ID>MagicNumber:Options.kt$OptionId.ExploreInstance$27</ID>
    <ID>MagicNumber:Options.kt$OptionId.Favorite$21</ID>
    <ID>MagicNumber:Options.kt$OptionId.FeaturePost$13</ID>
    <ID>MagicNumber:Options.kt$OptionId.Info$7</ID>
    <ID>MagicNumber:Options.kt$OptionId.InfoInstance$8</ID>
    <ID>MagicNumber:Options.kt$OptionId.LockPost$14</ID>
    <ID>MagicNumber:Options.kt$OptionId.OpenReports$17</ID>
    <ID>MagicNumber:Options.kt$OptionId.Remove$15</ID>
    <ID>MagicNumber:Options.kt$OptionId.Report$4</ID>
    <ID>MagicNumber:Options.kt$OptionId.ResolveReport$18</ID>
    <ID>MagicNumber:Options.kt$OptionId.Search$25</ID>
    <ID>MagicNumber:Options.kt$OptionId.SetCustomSort$24</ID>
    <ID>MagicNumber:Options.kt$OptionId.ToggleRead$11</ID>
    <ID>MagicNumber:Options.kt$OptionId.Unban$23</ID>
    <ID>MagicNumber:Options.kt$OptionId.Unsubscribe$28</ID>
    <ID>MagicNumber:Options.kt$OptionId.ViewModlog$22</ID>
    <ID>MagicNumber:PostCard.kt$0.25f</ID>
    <ID>MagicNumber:PostCard.kt$0.75f</ID>
    <ID>MagicNumber:PostCardImage.kt$1000</ID>
    <ID>MagicNumber:PostCardPlaceholder.kt$0.2f</ID>
    <ID>MagicNumber:PostCardPlaceholder.kt$0.5f</ID>
    <ID>MagicNumber:PostCardPlaceholder.kt$1.33f</ID>
    <ID>MagicNumber:PostCardVideo.kt$1.33f</ID>
    <ID>MagicNumber:UrlUtils.kt$3</ID>
    <ID>MatchingDeclarationName:InboxCard.kt$InboxCardType</ID>
  </CurrentIssues>
</SmellBaseline>
